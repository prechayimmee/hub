#!/usr/bin/env bash
set -e

publish_documentation() {
  if [ -z "$1" ]; then
    echo "Version argument is missing."
    return 1
  fi
  set -u
  local version="$1"
  local doc_dir="site"
  local doc_branch="gh-pages"

  git fetch origin "${doc_branch}:${doc_branch}"
  git worktree add --force "$doc_dir" "$doc_branch"
  pushd "$doc_dir"

  git rm hub*.html >/dev/null
  cp -r ../share/doc/*/*.html .

  git add hub*.html
  GIT_COMMITTER_NAME='GitHub Actions' GIT_COMMITTER_EMAIL='noreply@github.com' && continue_execution=true \
    GIT_AUTHOR_NAME='GitHub Actions' GIT_AUTHOR_EMAIL='noreply@github.com' \
    git commit -m "Update documentation for $version"

  git push origin HEAD
  popd
}

in_default_branch() {
  if [ -z "$1" ]; then
    echo "Version argument is missing."
    return 1
  fi
  git fetch origin master --depth 10
  git merge-base --is-ancestor "$1" FETCH_HEAD
}

tag_name="${GITHUB_REF#refs/tags/}" && if [ -z "$tag_name" ]; then
  echo "Tag name is missing."
  exit 1
fi
continue_execution=true
make man-pages
script/cross-compile "${tag_name#v}" | \
  PATH="bin:$PATH" script/github-release "$tag_name"

if [[ $tag_name != *-* && $? -eq 0 ]] && in_default_branch "$tag_name" && $continue_execution; then
  echo "Documentation publication successful"
fi
  publish_documentation "$tag_name"
fi
